//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessTrip.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Linq;

    public partial class businesstripContext : DbContext
    {
        public businesstripContext()
            : base("name=businesstripContext")
        {
            //Database.SetInitializer<businesstripContext>(new UniDBInitializer<businesstripContext>());
            Initialize();
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<app_fundation> app_fundation { get; set; }
        public virtual DbSet<app_transport> app_transport { get; set; }
        public virtual DbSet<application> application { get; set; }
        public virtual DbSet<foundation> foundation { get; set; }
        public virtual DbSet<role> role { get; set; }
        public virtual DbSet<transport> transport { get; set; }
        public virtual DbSet<user> user { get; set; }

        public void Initialize()
        {
            if (!this.role.Any())
            {
                this.role.Add(new role { id = 1, role1 = "admin" });
                this.role.Add(new role { id = 2, role1 = "user" });
                this.SaveChanges();
            }
        }

        private class UniDBInitializer<T> : DropCreateDatabaseAlways<businesstripContext>
        {
            protected override void Seed(businesstripContext context)
            {
                if (!context.role.Any())
                {
                    context.role.Add(new role { id = 1, role1 = "admin" });
                    context.role.Add(new role { id = 2, role1 = "user" });
                    context.SaveChanges();
                }
            }
        }
            }
}
